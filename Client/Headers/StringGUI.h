//
//  StringGUI.h
//
//  Created by Johan Ã˜verbye on 13.09.10.
//  Copyright 2010 String Labs Ltd. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

#include "TrackerOutput.h"

// This header is not needed for normal Unity-based
// projects. It's meant as a hook for Unity-based apps to
// be able to lay UIKit views on top of Unity's 3D view. 
// It's intended for experienced Cocoa Touch programmers.

// Important: You *must* add the linker flag -ObjC to the
// Xcode project generated by Unity (all configurations)
// in order for the factory class to be linked. When writing 
// categories, please also add the linker flag -all_load.


// This is the protocol for your GUI class delegate.
// Don't implement this protocol yourself; it's 
// implemented by the delegate object passed to
// instantiateWithDelegate:baseView:

@protocol StringGUIDelegate

// Increases or decreases the pause count 
// (see String for OGL documentation).
- (void)pause3DView: (BOOL)isPause;

// Returns YES if pause count is not zero.
- (BOOL)is3DViewPaused;

// Takes a snapshot and increases the pause count by 1. If 
// you intend to call this, please implement handleSnapshot:.
// (See String for OGL documentation for more info).
- (void)takeSnapshotAndPause3DView;

// Returns the full marker info from the last frame.
// (See String for OGL documentation for more info).
- (void)getCurrentMarkers: (const struct MarkerInfoQuaternionBased **)markers count:(int *)count;

@end

// This is the protocol your GUI class needs to implement.
// All methods are optional. Implement only what you need.
// Please note that if you call takeSnapshotAndPause3DView,
// your GUI class needs to respond to handleSnapshot:.

// Important: When your GUI class opens full-screen UIViews
// on top of the OpenGL ES view, please make sure to call
// pause3DView: for performance.

@protocol StringGUI

@optional

// Sets your StringGUI object's delegate
- (void)setStringGUIDelegate: (id<StringGUIDelegate>)delegate;

// Called when the first marker is found and the last 
// marker is lost, respectively.
- (void)markersFound;
- (void)markersLost;

// Called when a snapshot has been acquired 
// (see takeSnapshotAndPause3DView).
- (void)handleSnapshot: (UIImage *)image;

// Passed on from your Unity code (see StringWrapper.cs); 
// Handling of this method is up to the API user to define. 
// You can use this to communicate between your Unity code 
// and your UIKit GUI layer.
- (NSString *)invokeFunction: (NSString *)descriptor parameters: (NSArray *)parameters;

// Called once each frame; More reliable than NSTimer when 
// CPU load is high.
- (void)update;

// Passed on directly from UIApplication.
- (BOOL)application: (UIApplication *)application handleOpenURL: (NSURL *)url;
- (void)applicationDidBecomeActive: (UIApplication*)application;
- (void)applicationWillResignActive: (UIApplication*)application;

@end

// This is the factory class that instantiates your GUI class.
// The instantiate method should return an autoreleased 
// UIViewController that implements the StringGUI protocol.

// Important: You *must* add the linker flag -ObjC to the
// Xcode project generated by Unity (all configurations)
// in order for this class to be linked. When writing 
// categories, please also add the linker flag -all_load.

@interface StringGUIFactory : NSObject {}

+ (UIViewController<StringGUI> *)instantiate;

@end

